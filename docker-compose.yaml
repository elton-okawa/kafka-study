services:
  kafka-study-app:
    image: kafka-study-app
    container_name: kafka-study-app
    pull_policy: never
    build: ./app
    ports:
      - "4200:80"
  kafka-study-api:
    depends_on:
      kafka:
        condition: service_healthy
    image: kafka-study-api
    container_name: kafka-study-api
    pull_policy: never
    build: ./api
    ports:
      - "3000:3000"
    environment:
      - TOPIC_NAME=test-topic
      - KAFKAJS_NO_PARTITIONER_WARNING=1
      - KAFKA_BROKERS=kafka:9092
  kafka:
    image: "bitnami/kafka:latest"
    ports:
      - "9094:9094"
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    command: >
      sh -c
      "((sleep 15 && /opt/bitnami/kafka/bin/kafka-topics.sh --create --if-not-exists --topic $TOPIC_NAME --partitions $NUMBER_OF_PARTITIONS --bootstrap-server kafka:9092 && echo 'topic $TOPIC_NAME was created') &)
      && /opt/bitnami/scripts/kafka/run.sh"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics.sh --bootstrap-server kafka:9092 --topic $TOPIC_NAME --describe",
        ]
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 5
